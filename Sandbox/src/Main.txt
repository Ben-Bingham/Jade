------------------------------------
Main.cpp:

// Optimal Final main file showing what jade should be able to do

#include "Jade.h"

#include "GameObject.h"
#include "Component.h"
#include "cube.h"

Jade::start() {
	Jade::GameObject cube{};

	cube.transform.x += 4; // Gameobjects only have a transform component at first

	cube.setModel(Jade::Primitive(Jade::CUBE)); // this could be cleaner

	Jade::BoxCollider2D boxCollider; // Collisions are still up in the air
	cube.addComponent(boxCollider);

	cube.addUpdateFunction(cubeKeyCallBack);
}

Jade::update() {

}

--------------------------------------
cube.h:

void cubeUpdateFunction(Jade::GameObject gameobject);

---------------------------------------
cube.cpp:

void cubeUpdateFunction(Jade::GameObject gameobject) {
	if (Jade::KEY_HIT == Jade::W_KEY && Jade::KEYSTATUS == Jade::PRESSED) {
		Jade::Transform gbTransfomr = gameObject.getComponent<Jade::Transform>();
		gbTransform.x += 3 * Jade::deltaTime;
	}
	if (Jade::KEY_HIT == Jade::S_KEY && JADE::KEYSTATUS == Jade::PRESSED) {
		Jade::Transform gbTransfomr = gameObject.getComponent<Jade::Transform>();
		gbTransform.x -= 3 * Jade::deltaTime;
	}
}